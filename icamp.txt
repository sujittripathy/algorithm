Arrays & String I
-----------------
(Level: Easy) Given an array of numbers, replace each even number with two of the same number. e.g, [1,2,5,6,8] -> [1,2,2,5,6,6,8,8]. Assume that the array has enough space to accommodate the result.
Given a sentence, reverse the words of the sentence. For example, "i live in a house" becomes "house a in live i".
(Level: Easy) Reverse the order of elements in an array. For example, A = [1,2,3,4,5,6], Output = [6,5,4,3,2,1]
(Level: Easy) Two Sum Problem - Find 2 numbers in a sorted array that sum to X. For example, if A = [1,2,3,4,5] and X = 9, the numbers are 4 and 5.
(Level: Easy) Given a sorted array in non-decreasing order, return an array of squares of each number, also in non-decreasing order. For example:[-4,-2,-1,0,3,5] -> [0,1,4,9,16,25]
How can you do it in O(n) time?
(Level: Medium)Given an array of integers, find the continuous subarray, which when sorted, results in the entire array being sorted. For example: A = [0,2,3,1,8,6,9], result is the subarray [2,3,1,8,6]
(Level: Easy)You are given an array of integers. Rearrange the array so that all zeroes are at the beginning of the array. For example, [4,2,0,1,0,3,0] -> [0,0,0,4,1,2,3]
(Level: Easy) Now, given an array, move all zeroes to the end of the array.
For example, [4,2,0,1,0,3,0] -> [4,1,2,3,0,0,0]
(Level: Medium) Dutch National Flag Problem: Given an array of integers A and a pivot, rearrange A in the following order:[Elements less than pivot, elements equal to pivot, elements greater than pivot] For example, if A = [5,2,4,4,6,4,4,3] and pivot = 4 -> result = [3,2,4,4,4,4,6,5]
Note: the order within each section doesn't matter.
(Level: Medium)Given an array with n marbles colored Red, White or Blue, sort them so that marbles of the same color are adjacent, with the colors in the order Red, White and Blue.
Assume the colors are given as numbers - 0 (Red), 1 (White) and 2 (Blue).
For example, if A = [1,0,1,2,1,0,1,2], Output = [0,0,1,1,1,1,2,2].

Subarray Problems
------------------
 (Level: Easy) Given an array of integers, find the contiguous subarray (with at least 1 element) with the maximum sum. The array can contain both negative and positive integers.
 (Level: Easy) Given an array of positive integers, find the contiguous subarray that sums to a given number X. For example, input = [1,2,3,5,2] and X=8, Result = [3,5]
 (Level: Medium) Given a String, find the longest substring with unique characters.
For example: "whatwhywhere" --> "atwhy"
(Level: Medium) Given an array of integers, find the contiguous subarray that sums to 0. The array can contain both negative and positive integers. For example: Input = [2,4,-2,1,-3,5,-3], Result = [4,-2,1,-3]
(Level: Medium)Given an array of positive and negative integers, find a subarray whose sum equals X. For example: Input = [2,4,-2,1,-3,5,-3], X = 5 --> Result = [2,4,-2,1]

Binary Search
-------------
(Level: Easy) Given a sorted array that can contain duplicates, find the first occurrence of a target element T. For example, if A = [2,3,4,4,5,6] and T = 4, return index 2.
(Level: Easy)You are given a sorted array A and a target T. If the target is found, return the index. If not, return the index where it would be placed if inserted in order. For example,
A = [1,2,4,5,6,8] and T = 3, return index 2
A = [1,2,4,5,6,8] and T = 0, return index 0
A = [1,2,4,5,6,8] and T = 4, return index 2
(Level: Easy) Given a sorted array A and a target T, find the target. If the target is not in the array, find the number closest to the target. For example, if A = [2,3,5,8,9,11] and T = 7, return 8.
(Level: Easy) Given a sorted array A that has been rotated in a cycle, find the smallest element of the array in O(log(n)) time. For example,

[1,2,4,5,7,8] rotated by 3 gives us A = [5,7,8,1,2,4] and the smallest number is 1.
[1,2,4,5,7,8] rotated by 1 gives us A = [8,1,2,4,5,7] and the smallest number is 1.
(Level: Medium) Given a sorted array whose length is not known, perform binary search for a target T. Do the search in O(log(n)) time.
(Level: Easy)Find the square root of an integer X. For example, squareRoot(4) = 2. It is ok to find the integer floor of the square root. So squareRoot(5) or squareRoot(8) can also return 2. squareRoot(9) will return 3.
Using Binary Search, you can search for square roots over the integer space. This is pretty fast because it takes O(log(n)) time. Assume that x*x is less than the integer limit.
(Level: Medium)Search for a Peak: A peak element in array A is an A[i] where its adjacent elements are less than A[i]. So, A[i - 1] < A[i] and A[i + 1] < A[i].
Assume there are no duplicates. Also, assume that A[-1] and A[length] are negative infinity (-∞). So A[0] can be a peak if A[1] < A[0].

A = [1,3,4,5,2] => Peak = 5
A = [5,3,1] => Peak = 5
A = [1,3,5] => Peak = 5

Recursion & Backtracking
-------------------------
(Level: Very Easy) Fibonacci Series - Find the Nth element of the Fibonacci series - 1,1,2,3,5,8,..
(Level: Easy)Power Function: Implement a function to calculate xn. You may assume that both x and n are positive and overflow doesn't happen. Try doing it in O(log(n)) time.

(Level: Medium) Phone Number Mnemonic Problem: Given an N digit phone number, print all the strings that can be made from that phone number. Since 1 and 0 don't correspond to any characters, ignore them. For example:
213 => AD, AE, AF, BD, BE, BF, CD, CE, CF 
456 => GJM, GJN, GJO, GKM, GKN, GKO,.. etc.
(Level: Medium) Print all subsets of an array of integers.
Print all permutations of length X.
(Level: Medium) Coin Change Problem: Given a set of coin denominations, print out the different ways you can make a target amount. You can use as many coins of each denomination as you like.
For example: If coins are [1,2,5] and the target is 5, output will be:
[1,1,1,1,1]
[1,1,1,2]
[1,2,2]
[5]
(Level: Medium) Maze Problem: You are given a 2D array that represents a maze. It can have 2 values - 0 and 1. 1 represents a wall and 0 represents a path. The objective of the maze is to reach the bottom right corner, or A[A.length-1][A.length-1]. You start from A[0][0] and can only go in 4 directions - up, down, left or right. Find if a path exists.
For example, a path exists in the following maze:

(Level: Medium)Word Break Problem: Given a String S, which contains letters and no spaces, find if it can be broken it into valid words. Return one such combination of words. Assume you are provided a dictionary of English words.
For example:
S = "ilikemangotango"
Output: any one of the following:
"i like mango tango"
"i like man go tan go"
"i like mango tan go"
"i like man go tango"
(Level: Hard)Sudoku Solver: Given a 9x9 partially filled array, find a way to fill it such that each row, column and 3x3 sub-grid contain exactly one instance of digits 1-9. For example,

LinkedList
-----------
(Level: Easy) Getting the Nth node in a Linked List.
(Level: Easy) You are given a Linked List with nodes that have values 0, 1 or 2. Sort the linked list. For example,
Input: 1 -> 0 -> 2 -> 1 -> 2 -> 1
Output: 0 -> 1 -> 1 -> 1 -> 2 -> 2
(Level: Easy) Let's say you are not given N's previous node. Is there another way to delete N?
Level: Medium Given a linked list and pointers to a node N and its previous node Prev, delete N fromthe linked list.
(Level: Easy - because the trick is commonly known now) Given a Linked List, find if it has a cycle. 
(Level: Easy) If you found a cycle in a linked list, find the length of the cycle.
(Level: Easy) Given a linked list, find its median node. You may assume the list does not have a cycle.
(Level: Easy) Find the 3rd to last element in a given linked list.
(Level: Medium) Given a Linked List with a cycle, find the node where the cycle begins.
(Level: Hard) LRU Cache Problem: Implement a Least Recently Used (LRU) cache.
(Level: Hard) Smallest Subarray Covering All Values: Let's say you are given a large text document Doc. You are also given a set S of words. You want to find the smallest substring of Doc that contains all the words in S. For example:
S: ["and", "of", "one"]
Doc: "a set of words that is complete in itself, typically containing a subject and predicate, conveying a statement, question, exclamation, or command, and consisting of a main clause and sometimes one or more subordinate clauses"
The underlined part above is the solution. Note that the order in which the words appear doesn't matter. Also, the length of the substring is in terms of number of characters.
(Level: Easy) Reverse a linked list in place. For example:
Input: Head -> 1 -> 2 -> 3 -> 4 -> null
Output: Head -> 4 -> 3 -> 2 -> 1 -> null
(Level: Medium) Is Palindrome: Given a Linked List, determine if it is a Palindrome. For example, the following lists are palindromes:
A -> B -> C -> B -> A
A -> B -> B -> A
K -> A -> Y -> A -> K
Note: Can you do it with O(N) time and O(1) space? (Hint: Reverse a part of the list)

Stack
------
(Level: Medium) Implement a Queue using 2 Stacks.
(Level: Medium) Use an array to implement 2 Stacks.
(Level: Medium) Implement a Stack with O(1) lookup of the maximum element in the stack. For example,
Stack: 3 -> 2 -> 1 -> 5
Max() => 5
After 1 pop():
Stack: 3 -> 2 -> 1
Max() => 3
(Level:Hard) Givenanarithmeticexpressionwith*,/,-&+operatorsandsingledigitnumbers,evaluateitandreturntheresult.For example,1 + 2 / 1 + 3 * 2 ==> 9
(Level:Hard) Givenanarithmeticexpressionwith*,/,-&+operatorsandsingledigitnumbers,evaluateitandreturntheresult.Theexpressioncanalsocontainparenthesis.
For example,
1 + 2 / 1 + 3 * 2 ==> 9
1  + (1 + 3) * 2 ==> 10
1 + 2 / (1 + 3) * 2 ⇒ 1

Queue
------
(Level: Easy) Implement a Queue using an array.
(Level: Easy) Sliding Windows: Given an array of integers A, find the sum of sliding windows of size N. For example: if A = [2,3,5,6,2,1]

Sliding Window Sums:
[2,3,5,6,2,1] => 10
[2,3,5,6,2,1] => 14
[2,3,5,6,2,1] => 13
[2,3,5,6,2,1] => 9

Variation: Instead of an array, what if you were presented with a stream of numbers. A new number can be added anytime. You want to find the sum of the last K elements.

(Level: Medium) Sliding Windows with Time: You are given stock prices and the corresponding day of each stock price as an input stream. For example:
(32, 1), (45, 1), (37,2), (42,3) ...
Here 32 is the price and 1 is the day of the price. Your system should be able to tell the maximum stock price in the last 3 days.
(Level: Hard) Implement a Queue with O(1) lookup of the maximum element in the Queue.
(Level: Hard) Maximum of Sliding Window: Given an array A and an integer K, find the maximum element in each sliding window of size K. For example:

A = [4,6,5,2,4,7] and K = 3, windows are as follows:

[4,6,5,2,4,7] : Max = 6
[4,6,5,2,4,7] : Max = 6
[4,6,5,2,4,7] : Max = 5
[4,6,5,2,4,7] : Max = 7

Output: 6,6,5,7
Hint: You can do this in O(n) time, by using the Queue with Max we implemented above.

Dynamic Programming
--------------------
(Level: Very Easy) Given a number N, find the Nth Fibonacci number.

*** TBD *** 

Arrays & String II
--------------------
(Level: Medium) Given a list of stock prices for a company, find the maximum amount of money you could have made with one trade (one buy/sell). For example, if A = [2,3,1,4,5,7,5,4], the max money with a single trade is 6, if you buy at 1 and sell at 7.
(Level: Hard) How much money could you have made with 2 trades?
(Level: Medium) Rotate a 2D array clockwise by 90 degrees, like rotating the pixels of an image.
(Level: Medium) Print a 2D array in Diagonal ZigZag order.
(Level: Medium) Print elements of a matrix in spiral order.
(Level: Easy) Check if a string A is a rotation of another string B. For example, "atbobc" is a rotation of "bobcat".
(Level: Easy) Reverse the words in a sentence. For example,
"what is your name" => "name your is what"
(Level: Medium) Find the longest palindromic substring in a string. For example:
"abcababadef" => "ababa"
"ffabbahh" => "abba"
(Level: Easy) Rotate an array A by X items. For example,
A = [1,2,3,4,5,6] and X = 2, Result = [5,6,1,2,3,4]
Hint: Use same trick we used in "Reverse Words of a Sentence" above.
(Level: Hard) BigInteger Addition: You are given a number in the form of an array. Each digit in the array represents a digit in the number. For example, 100 -> [1,0,0]. Perform addition of 2 such number arrays. For example,
[1,1,1,1] + [2,2,3,3] = [3,3,4,4]
[9,9] + [1] = [1,0,0]
(Level: Hard) BigInteger Multiplication: You are given a number in the form of an array. Each digit in the array represents a digit in the number. For example, 100 -> [1,0,0]. Perform multiplication of 2 such number arrays. For example,
[2,0,5,0] * [2] = [4,1,0,0]
[9,9] * [1] = [9,9]

Hash table & Hash functions
------------------------
Knowing how to generate hash functions is useful in interviews. For example, String Search has become a popular interview question. The best interview solution - the Rabin Karp Algorithm - uses the hash functions we generate in this section. 
Level: Hard Generate a good hash function for a String.
(Level: Hard) String Search: Find the index where the larger string A contains a target string T.

Graphs I
---------
Level: Medium Given a graph and a target number T, find T exists in the graph (BFS/DFS)
(Level: Hard) Clone a Graph: Given an undirected graph, make a copy.
Hint: The trick here is to maintain a map of old nodes to their corresponding new nodes. This will ensure that any cycles are handled.
Note: This can be solved with either DFS or BFS.
(Level: Easy) Print Graph in Level Order: Given a graph and a node N, print the Graph in order of distance from N. All nodes of distance 1 from N, followed by nodes of distance 2 from N, etc.
Similar Problem: Print a tree in level order.
(Level: Medium) - Very Commonly Asked
Word Ladder Problem: You are given 2 words A and B, both of the same length. Your task is to transform one word to another changing only one letter each time. Each intermediate word should be a valid word in the dictionary. Print out the length of the path. (Alternate version: print out the intermediate words)
A = CAB, B = DOG
Result: 4 (CAB -> COB -> COG -> DOG)
(Level: Hard) You are given a directed graph of courses a college student has to take. An edge from course A to course B means that you need to finish A before taking course B. Determine the minimum number of semesters to finish all the courses.
Level:Hard Sort a graph in topological order


Heap
-----
(Level: Easy) Find the n smallest numbers in an array of integers.
(Level: Hard) Implementation of a Heap - including inserting a node, deleting the max node, and deleting any node.
(Level: Hard) Online Median: Given a stream of integers, find their median. If any integer is added to the stream, you should be able to update the median quickly.

Line Sweep
-----------
(Level: Medium) Given a list of time intervals, find if any of them overlap. Each interval has a start time and a stop time.
(Variation of above) Given a list of time intervals, find the largest number of overlaps at any point.
(Level: Medium) Merge Intervals - Given a list of intervals, merge all overlapping intervals. At the end of the merge, there should be no overlapping intervals.

For example,
Input = (1,3), (3,5), (6,8), (7,9)
Output = (1,5), (6,9)
(Level: Hard) Drawing the Skyline: You are given a list of buildings that are part of a skyline. For each building, you are given the height, start and end points. So if a building has [height=5, start=1, end=4], it represents a building of height 5 from point 1 on a number line to point 4.
Given a list of such buildings that may overlap, you want to draw the skyline.

Selection Algorithm
--------------------
(Level: Hard) Find the Kth smallest element in a given array of integers. For e.g,
If A => [5,7,4,6,5,3,3] and K => 3, Result will be 4.

Note: This is also known as the Kth order statistic of the array.

Sorting Algorithm
------------------
(Level: Easy) How to Merge two Sorted Arrays 
(Level: Medium) You are given a file with many lines. The lines can be of any length. Sort the file in alphabetical order. (Trick: Since moving around lines of different length is a challenge, move around pointers to the line(s))
(Level: Easy) Given an array of single digit integers, sort it in O(n) time.
For e.g, if A = [2,6,3,6,8,4,2], Output = [2,2,3,4,6,6,8]

Graphs II
---------
(Level: Medium) Given a graph, find if there is a cycle.
Alternative phrasings (These questions use the same algorithm, so you don't need to practice them separately. Just practice the core algorithm to detect cycles.)
1. Are Courses Valid: You are given a graph of courses a student needs to take. An edge from course A to B means that A is a prerequisite for B. Determine if the graph is valid and the courses can be completed.
Solution: If there is a cycle, the courses cannot be completed.
2. Can Software Compile: You are given a directory of source code files and the dependencies of each file. A file F can be dependent on one or more files in the directory. Determine if the software can compile.
Solution: Make a graph where a node is a file and an edge is a dependency between 2 files. If there is a cycle, the software cannot compile.

2 Color Problem: Given a graph, color its nodes with 2 colors - red and blue - such that no 2 neighbors have the same color.
(Level: Medium) Given a graph, mark each connected component with a different color.
 
 Find Islands: You are given a 2d array of 1s and 0s. 1 denotes land and 0 denotes water. Land can be connected diagonally or on either 4 ends. You want to find the number of islands in the array. Here is an example:

Bit Manipulation
-----------------
(Level: Easy) Given an integer, flip all its bits.
(Level: Easy) Given an integer, flip its bits at index 0 and index 5.
(Level: Easy) Given an integer, get the bit at a given index I. Return 0 or 1.
(Level: Easy) Given an integer, set the bit at index I to a given value V.
(Level: Medium) Given an integer N, swap bits at indices I and J. For example,
N = 1110 and I = 0, J = 3, Result = 0111
N = 0110 and I = 0, J = 3, Result = 0110
(Level: Medium) Given an integer N, reverse the order of its bits. For example,
N = 1110, Result = 0111
N = 0100, Result = 0010
(Level: Medium) Count the number of bits in a number, i.e, number of bits set to 1. For example,
N = 01011, Result = 3
N = 01100, Result = 2
(Level: Medium) Find the complement of an integer. A complement has the number's bits flipped, starting from the most significant 1. For example,
A => 00010001, Complement => 00001110
A => 00000111, Complement => 00000000
(Level: Easy) Given an array with all numbers in [1, 2, 3, ... , n] except one number, find the missing number. For example:
(Level: Easy)Given an array of integers where each element appears twice except one, find the element which appears once.
For example: A = [3,7,3,5,5], Result = 7

Binary Tree
-------------
(Level: Medium) Given a Binary Tree, print out its In-order Traversal, but implement the traversal iteratively instead of recursively.
(Level: Easy) Find the height of a binary tree.
(Level: Easy) Given a Binary Tree, print all paths from root to leaf. For example, in the below tree:
(Level: Easy) Find the height of a binary tree.
Remember: The Height of a binary tree is the Depth of its deepest node.
(Level: Medium) Is Balanced: Given a binary tree, find if it is Balanced or not.
(Level: Medium) Find the Diameter of a Binary Tree. The Diameter is the longest path from any 2 nodes in the tree. For example:
(Level: Medium) LCA with Parent Pointer: Given a Binary Tree and two Nodes A and B, find their lowest common ancestor. Assume that each node has a pointer to its parent node.
(Level: Medium) LCA without Parent Pointer: How will you find the LCA if you don't have a parent pointer?
(Level: Hard) Given inorder and preorder traversals of a binary tree, reconstruct the binary tree.
(Level: Hard) Can you reconstruct the tree if you have the preorder and postorder traversals? (Answer: No)


Binary Search Tree
--------------------
(Level: Easy) Implement operations to Search for a node and Add a node into a Binary Search Tree.
(Level: Hard) Implement the Delete operation in a Binary Search Tree, i.e, given a BST and a node, delete the node from the BST.
(Level: Medium) Given a Binary Search Tree that can contain duplicates, find the first occurrence of the number X. The first occurrence is the first node that we will encounter in an in-order traversal.
(Level: Easy) Find the in-order successor of a given node in a BST.
 (Level: Medium) Range Querying: Given a Binary Search Tree, find all the elements in the range [A..B], both A and B inclusive. For example, if we are looking for nodes in the range [5,8] in the following tree:
            8
        3       10
    1       6       14
        4      7  13
 Output: 6, 7, 8
(Level: Easy) LCA: Given two nodes A and B in a Binary Search Tree, find the lowest common ancestor.
(Level: Easy) Given a sorted array, build a balanced Binary Search Tree with the elements of the array.
(Level: Hard) Given a sorted linked list, build a balanced Binary Search Tree with the elements of the linked list.

Trie
-----
N/A

